name: sysrepo-plugin-system CI

on:
  push:
    branches: [ "main", "devel" ]
  pull_request:
    branches: [ "main", "devel" ]

jobs:
  build:
    name: ${{matrix.config.name}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Release, gcc",
            build-type: "Release",
            cc: "gcc",
            options: "-DENABLE_BUILD_TESTS=ON -DSYSTEMD_IFINDEX=1",
            packager: "sudo apt-get",
            # no expect because stdout seems to be redirected
            packages: "libcmocka-dev libsystemd-dev ntp ssh",
          }
          - {
            name: "Release, clang",
            build-type: "Release",
            cc: "clang",
            options: "-DENABLE_BUILD_TESTS=ON -DSYSTEMD_IFINDEX=1",
            packager: "sudo apt-get",
            packages: "libcmocka-dev libsystemd-dev ntp ssh",
          }
          - {
            name: "Debug, gcc",
            build-type: "Debug",
            cc: "gcc",
            options: "-DENABLE_BUILD_TESTS=ON -DSYSTEMD_IFINDEX=1",
            packager: "sudo apt-get",
            packages: "libcmocka-dev libsystemd-dev ntp ssh",
          }
          - {
            name: "Debug, clang",
            build-type: "Debug",
            cc: "clang",
            options: "-DENABLE_BUILD_TESTS=ON -DSYSTEMD_IFINDEX=1",
            packager: "sudo apt-get",
            packages: "libcmocka-dev libsystemd-dev ntp ssh",
          }
          - {
            name: "ASAN and UBSAN",
            build-type: "Debug",
            cc: "clang",
            options: "-DCMAKE_C_FLAGS=-fsanitize=address,undefined -DENABLE_BUILD_TESTS=ON -DSYSTEMD_IFINDEX=1",
            packager: "sudo apt-get",
            packages: "libcmocka-dev libsystemd-dev ntp ssh",
          }

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Deps-packages
        shell: bash
        run: |
          ${{matrix.config.packager}} update
          if ${{matrix.config.packages != ''}}
            then ${{matrix.config.packager}} install ${{matrix.config.packages}}
          fi

      - name: Deps-libyang
        shell: bash
        run: |
          git clone https://github.com/cesnet/libyang
          cd libyang
          CC=${{matrix.config.cc}} cmake -B build
          cmake --build build
          sudo cmake --install build
          sudo ldconfig

      - name: Deps-sysrepo
        shell: bash
        run: |
          git clone https://github.com/sysrepo/sysrepo
          cd sysrepo 
          CC=${{matrix.config.cc}} cmake -B build
          cmake --build build
          sudo cmake --install build
          sudo ldconfig

      - name: Deps-srpc
        shell: bash
        run: |
          git clone --recurse-submodules https://github.com/telekom/sysrepo-plugins-common
          cd sysrepo-plugins-common
          CC=${{matrix.config.cc}} cmake -B build
          cmake --build build
          sudo cmake --install build
          sudo ldconfig

      - name: Deps-umgmt
        shell: bash
        run: |
          git clone --recurse-submodules https://github.com/sartura/umgmt
          cd umgmt
          CC=${{matrix.config.cc}} cmake -B build
          cmake --build build
          sudo cmake --install build
          sudo ldconfig

      - name: Deps-robot
        shell: bash
        run: |
          git clone https://github.com/telekom/sysrepo-library-robot-framework
          cd sysrepo-library-robot-framework
          sudo python3 -m pip install --upgrade pip setuptools wheel build
          sudo python3 -m pip install .
          sudo python3 -m pip install rpaframework
          sudo sysctl -e fs.protected_regular=0

      - name: Configure
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          CC=${{matrix.config.cc}} cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.config.build-type}} ${{matrix.config.options}}

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          cmake --build ${{github.workspace}}/build
          sysrepoctl -i yang/iana-crypt-hash@2014-08-06.yang
          sysrepoctl -i yang/ietf-system@2014-08-06.yang
          sysrepoctl -c ietf-system -e timezone-name
          sysrepoctl -c ietf-system -e ntp

      - name: Test
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure

      - name: debugging
        uses: lhotari/action-upterm@v1

      - name: Integration test
        shell: bash
        working-directory: ${{github.workspace}}/tests/integration
        env:
          SYSREPO_SYSTEM_PLUGIN_PATH: ${{github.workspace}}/build/src/plugins/ietf-system/ietf-system-plugin
        run: |
          sudo bash -c "export SYSREPO_SYSTEM_PLUGIN_PATH=$SYSREPO_SYSTEM_PLUGIN_PATH; robot robot-ietf-system"


